basePath: /api
definitions:
  domain.CustomError:
    properties:
      code:
        type: integer
      errors: {}
      message:
        type: string
    type: object
  dto.BaseResponse:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  dto.LoginDto:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  dto.RegisterDto:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  dto.ResLoginDto:
    properties:
      token:
        type: string
      user_id:
        type: string
    type: object
  dto.ResUserDto:
    properties:
      created_at:
        type: string
      created_by:
        type: string
      email:
        type: string
      id:
        type: string
      updated_at:
        type: string
      updated_by:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: API for money management, to track expense and income \n\nTo authorize,
    click "Authorize" and enter your JWT token in this format:\n**Bearer &lt;your_token&gt;**
  title: Money Management API
  version: "1.0"
paths:
  /users/login:
    post:
      description: Login user
      parameters:
      - description: Login Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.ResLoginDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.CustomError'
      summary: Login
      tags:
      - auth
  /users/profile:
    get:
      description: Get user profile by JWT
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.ResUserDto'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.CustomError'
      security:
      - BearerAuth: []
      summary: Get User Profile By JWT
      tags:
      - users
  /users/register:
    post:
      description: Register new user
      parameters:
      - description: Register Payload
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/dto.RegisterDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.BaseResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/domain.CustomError'
      summary: Register
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
